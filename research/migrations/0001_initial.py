# Generated by Django 3.2.19 on 2023-06-21 16:20

import datetime
from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('metrics', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Artifact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('uxid', models.PositiveIntegerField(blank=True, null=True)),
                ('name', models.CharField(db_index=True, help_text='Keep it clear, concise, and easy to read.', max_length=255, unique=True)),
                ('abstract', models.TextField(db_index=True, help_text='A summary of the research. This is displayed on the search list page.', max_length=255, verbose_name='Short description')),
                ('description', models.TextField(db_index=True, help_text='A detailed description of the research', verbose_name='Full description')),
                ('hypothesis', models.TextField(blank=True, db_index=True, help_text='What you expected would happen as a result of this research', null=True)),
                ('target_audience', models.CharField(blank=True, db_index=True, help_text='Description of the users of the tool, app, or user experience for which the research was conducted. For example, personas affected.', max_length=255, null=True, verbose_name='User group(s)')),
                ('findings', models.JSONField(blank=True, default=list, null=True)),
                ('test_start_date', models.DateField(blank=True, null=True)),
                ('test_end_date', models.DateField(blank=True, null=True)),
                ('research_date', models.DateField(blank=True, help_text='The date of the completed or posted research', null=True)),
                ('sort_date', models.DateField(blank=True, null=True)),
                ('study_plan_urls', django.contrib.postgres.fields.ArrayField(base_field=models.URLField(blank=True, max_length=255), blank=True, help_text='Links to any study plans pertaining to this research', null=True, size=None, verbose_name='Study plan URL(s)')),
                ('final_report_urls', django.contrib.postgres.fields.ArrayField(base_field=models.URLField(blank=True, max_length=255), blank=True, help_text='Link(s) to the actual research report(s)', null=True, size=None, verbose_name='Final report URL(s)')),
                ('external_research_urls', django.contrib.postgres.fields.ArrayField(base_field=models.URLField(blank=True, max_length=255), blank=True, help_text='Link(s) to the external research', null=True, size=None, verbose_name='External research/third party URL(s)')),
                ('archived', models.BooleanField(default=False)),
                ('alchemer_survey_id', models.PositiveIntegerField(blank=True, help_text='The Alchemer survey ID used for this research. EX: 7968827', null=True)),
                ('alchemer_survey_questions', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='artifact_created_by', to=settings.AUTH_USER_MODEL)),
                ('editors', models.ManyToManyField(blank=True, related_name='artifact_editors', to=settings.AUTH_USER_MODEL, verbose_name='Additional editors')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ArtifactSearch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=datetime.datetime.now, editable=False)),
                ('updated_at', models.DateTimeField(default=datetime.datetime.now, editable=False)),
                ('search_text', models.CharField(max_length=255, unique=True)),
                ('search_count', models.PositiveIntegerField(default=0)),
            ],
            options={
                'ordering': ['-search_count', 'search_text'],
            },
        ),
        migrations.CreateModel(
            name='BannerNotification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('active', models.BooleanField(default=False)),
                ('banner_text', models.CharField(max_length=255)),
                ('banner_type', models.CharField(choices=[('info', 'info'), ('warn', 'warn'), ('alert', 'alert')], default='info', max_length=20)),
            ],
            options={
                'ordering': ['active', 'name'],
            },
        ),
        migrations.CreateModel(
            name='SurveyQuestionExclusion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.CharField(max_length=255)),
            ],
            options={
                'ordering': ['question_text'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('uxid', models.PositiveIntegerField(blank=True, null=True)),
                ('name', models.CharField(max_length=64, unique=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tag_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tag_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('uxid', models.PositiveIntegerField(blank=True, null=True)),
                ('name', models.CharField(max_length=64, unique=True)),
                ('color_class', models.CharField(default='bg-black', max_length=32)),
                ('text_color_class', models.CharField(default='white', max_length=32)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='status_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='status_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Statuses',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('uxid', models.PositiveIntegerField(blank=True, null=True)),
                ('name', models.CharField(max_length=64, unique=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='source_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='source_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('full_name', models.CharField(blank=True, max_length=255)),
                ('image', models.TextField(blank=True, null=True)),
                ('inactive', models.BooleanField(default=False)),
                ('research_count', models.PositiveIntegerField(default=0)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['full_name'],
            },
        ),
        migrations.CreateModel(
            name='PageView',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('url', models.CharField(max_length=2000)),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pageview_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-view_count'],
            },
        ),
        migrations.CreateModel(
            name='Method',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('uxid', models.PositiveIntegerField(default=0)),
                ('name', models.CharField(max_length=64, unique=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='method_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='method_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='BrokenLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('link_url', models.CharField(max_length=400)),
                ('report_count', models.PositiveIntegerField(default=0)),
                ('artifact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='broken_link_artifact', to='research.artifact')),
            ],
            options={
                'ordering': ['-report_count'],
            },
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='attachment_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='attachment_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='artifact',
            name='final_report_files',
            field=models.ManyToManyField(blank=True, related_name='artifact_final_report_files', to='research.Attachment'),
        ),
        migrations.AddField(
            model_name='artifact',
            name='methods',
            field=models.ManyToManyField(blank=True, related_name='artifact_methods', to='research.Method'),
        ),
        migrations.AddField(
            model_name='artifact',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='artifact_owner', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='artifact',
            name='projects',
            field=models.ManyToManyField(blank=True, related_name='artifact_projects', to='metrics.Project'),
        ),
        migrations.AddField(
            model_name='artifact',
            name='related_artifacts',
            field=models.ManyToManyField(blank=True, help_text='Other research items related to this one', related_name='_research_artifact_related_artifacts_+', to='research.Artifact', verbose_name='Related research'),
        ),
        migrations.AddField(
            model_name='artifact',
            name='source',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='artifact_source', to='research.source'),
        ),
        migrations.AddField(
            model_name='artifact',
            name='status',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='artifact_status', to='research.status'),
        ),
        migrations.AddField(
            model_name='artifact',
            name='study_plan_files',
            field=models.ManyToManyField(blank=True, related_name='artifact_study_plan_files', to='research.Attachment'),
        ),
        migrations.AddField(
            model_name='artifact',
            name='tags',
            field=models.ManyToManyField(blank=True, help_text='Keywords to associate this research with. Helps others easily find it.', related_name='artifact_tags', to='research.Tag', verbose_name='keywords'),
        ),
        migrations.AddField(
            model_name='artifact',
            name='updated_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='artifact_updated_by', to=settings.AUTH_USER_MODEL),
        ),
    ]
